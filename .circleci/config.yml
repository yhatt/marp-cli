version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.8
  codecov: codecov/codecov@4.1.0

executors:
  node:
    parameters:
      browser:
        type: boolean
        default: false
      version:
        type: string
        default: '20.17.0' # Specify LTS major and minor for development
    docker:
      - image: cimg/node:<< parameters.version >><<# parameters.browser >>-browsers<</ parameters.browser >>
    working_directory: ~/marp-cli

  # docker:
  #   machine:
  #     image: ubuntu-2204:2023.04.2
  #     docker_layer_caching: true
  #   working_directory: ~/marp-cli
  #   environment:
  #     DOCKER_BUILDKIT: 1

commands:
  install:
    parameters:
      postinstall:
        type: steps
        default: []
    steps:
      - restore_cache:
          keys:
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-{{ .Branch }}
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-
            - v3-dependencies-{{ .Environment.CIRCLE_JOB }}-

      - run: |
          npm ci
          npx patch-package

      - steps: << parameters.postinstall >>

      - save_cache:
          key: v3-dependencies-{{ .Environment.CIRCLE_JOB }}-{{ checksum "package-lock.json" }}-{{ .Branch }}
          paths:
            - ~/.npm

  audit:
    steps:
      - checkout
      - install:
          postinstall:
            - run: npm -s run check:audit

  prepare:
    parameters:
      browser:
        type: boolean
        default: false
    steps:
      - run: node --version

      - checkout
      - install

      - when:
          condition: << parameters.browser >>
          steps:
            - browser-tools/install-chrome

  lint:
    steps:
      - run:
          name: Prettier formatting
          command: npm run check:format

      - run:
          name: TypeScript type checking
          command: npm run check:ts

      - run:
          name: ESLint
          command: npm run lint:js

      - run:
          name: stylelint
          command: npm run lint:css

  test:
    steps:
      - run:
          name: Jest
          command: npm run test:coverage -- --ci -i --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: tmp/test-results

      - codecov/upload:
          flags: linux

      - store_test_results:
          path: tmp/test-results

      - store_artifacts:
          path: ./coverage
          destination: coverage

  build:
    steps:
      - checkout
      - install

      - run: npm run build

      - persist_to_workspace:
          root: ~/marp-cli
          paths:
            - lib

  # docker:
  #   parameters:
  #     tag:
  #       type: string
  #       default: latest
  #     user:
  #       type: env_var_name
  #       default: DOCKER_USER
  #     pass:
  #       type: env_var_name
  #       default: DOCKER_PASS
  #     machine:
  #       type: boolean
  #       default: false
  #   steps:
  #     - checkout

  #     - attach_workspace:
  #         at: ~/marp-cli

  #     - unless:
  #         condition: << parameters.machine >>
  #         steps:
  #           - setup_remote_docker:
  #               version: '20.10.2'

  #     - run:
  #         name: Login to Docker Hub
  #         command: docker login -u ${<< parameters.user >>} -p ${<< parameters.pass >>}

  #     - run:
  #         name: Install Docker buildx
  #         command: |
  #           docker build --platform=local --quiet -o ~ "https://github.com/docker/buildx.git#v0.8.1"
  #           mkdir -p ~/.docker/cli-plugins
  #           mv ~/buildx ~/.docker/cli-plugins/docker-buildx
  #         environment:
  #           DOCKER_BUILDKIT: 1

  #     - run:
  #         name: Setup QEMU
  #         command: docker run --privileged --rm tonistiigi/binfmt --install all

  #     - run:
  #         name: Build Docker image and push to Docker Hub
  #         command: |
  #           docker context create builder
  #           docker buildx create --use builder
  #           docker buildx build --no-cache --platform linux/amd64,linux/arm64 --progress plain --push -t marpteam/marp-cli:<< parameters.tag >> .
  #         environment:
  #           DOCKER_CLI_EXPERIMENTAL: enabled

jobs:
  audit:
    executor: node
    steps:
      - audit

  test-node18:
    executor:
      name: node
      browser: true
      version: '18.20'
    steps:
      - prepare:
          browser: true
      - lint
      - test

  test-node20:
    executor:
      name: node
      browser: true
    steps:
      - prepare:
          browser: true
      - lint
      - test

  test-node22:
    executor:
      name: node
      browser: true
      version: '22.8'
    steps:
      - prepare:
          browser: true
      - lint
      - test

  # Docker
  # docker-build-latest:
  #   executor: node
  #   steps:
  #     - build

  # docker-image-latest:
  #   executor: docker
  #   steps:
  #     - docker:
  #         tag: latest
  #         machine: true

  # docker-build-tag:
  #   executor: node
  #   steps:
  #     - build

  # docker-image-tag:
  #   executor: docker
  #   steps:
  #     - docker:
  #         tag: $CIRCLE_TAG
  #         machine: true

workflows:
  test:
    jobs:
      # Test
      - audit
      - test-node18:
          requires:
            - audit
      - test-node20:
          requires:
            - audit
      - test-node22:
          requires:
            - audit
